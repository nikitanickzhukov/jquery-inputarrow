{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","defaults","prop","InputArrow","input","options","_this","this","_classCallCheck","opt","extend","$input","$prev","renderPrev","$next","renderNext","on","startCounting","__isStarted","__isCounting","stopCounting","__clearCounting","count","__checkChange","check","__currentGrad","gradientDefault","fit","jQuery","min","max","Infinity","step","emptyOnMin","document","createElement","addClass","html","insertBefore","insertAfter","encodeValue","decodeValue","onChange","onIterate","disabledClassName","comma","gradientFactor","gradientMax","delay","interval","window","Symbol","_createClass","key","value","k","getValue","newValue","__round","setValue","trigger","_this2","__delayTimer","setTimeout","__oldValue","__currentValue","__incTimer","setInterval","__iterateCounting","clearInterval","stop","__incGrad","clearTimeout","parseFloat","toString","replace","TypeError","removeClass","Math","round","off","remove","fn","inputarrow","arg","_len","arguments","args","Array","_key","get","test","res","apply","push","_res","_i","attrs","eq","attr"],"mappings":"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","file":"../jquery.inputarrow.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n/* global jQuery */\n\n(function($) {\n    let defaults = {\n        min: 0,\n        max: Infinity,\n        step: 1,\n        emptyOnMin: false,\n        renderPrev(input) {\n            return $(document.createElement('span')).addClass('inputarrow-prev').html('<').insertBefore(input);\n        },\n        renderNext(input) {\n            return $(document.createElement('span')).addClass('inputarrow-next').html('>').insertAfter(input);\n        },\n        encodeValue: null,\n        decodeValue: null,\n        onChange: null,\n        onIterate: null,\n        disabledClassName: 'inputarrow-disabled',\n        comma: false,\n        gradientFactor: 1.1,\n        gradientDefault: 1,\n        gradientMax: 20,\n        delay: 300,\n        interval: 120\n    };\n\n    let prop = window.Symbol ? window.Symbol('inputarrow') : '__inputarrow';\n\n\n    /** Class representing an inputarrow handler. */\n    class InputArrow {\n        /**\n         * Create an instance, setup plugin.\n         * @param {HTMLInputElement} input - html element.\n         * @param {object} options - settings.\n         */\n        constructor(input, options) {\n            this.input = input;\n            this.opt = $.extend({}, defaults, options);\n\n            this.$input = $(this.input);\n            this.$prev = this.opt.renderPrev.call(this, this.input);\n            this.$next = this.opt.renderNext.call(this, this.input);\n\n            this.$prev.on('mousedown touchstart', () => {\n                this.startCounting(-1);\n            }).on('mouseup mouseout touchend', () => {\n                if (this.__isStarted) {\n                    if (this.__isCounting) {\n                        this.stopCounting();\n                    } else {\n                        this.__clearCounting();\n                        this.count(-1);\n                    }\n                }\n            });\n\n            this.$next.on('mousedown touchstart', () => {\n                this.startCounting(1);\n            }).on('mouseup mouseout touchend', () => {\n                if (this.__isStarted) {\n                    if (this.__isCounting) {\n                        this.stopCounting();\n                    } else {\n                        this.__clearCounting();\n                        this.count(1);\n                    }\n                }\n            });\n\n            this.__checkChange = () => {\n                this.check();\n            };\n            this.$input.on('change', this.__checkChange);\n\n            this.__currentGrad = this.opt.gradientDefault;\n\n            this.fit();\n            this.check();\n        }\n        /**\n         * Single increment or decrement value.\n         * @public\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        count(k) {\n            let value = this.getValue();\n            let newValue = this.__round(value + k * this.opt.step);\n\n            if (newValue < this.opt.min) {\n                newValue = this.opt.min;\n            } else if (newValue > this.opt.max) {\n                newValue = this.opt.max;\n            }\n\n            if (newValue !== value) {\n                this.setValue(newValue);\n                this.$input.trigger('change');\n                if (this.opt.onChange) {\n                    this.opt.onChange.call(this, newValue, value);\n                }\n            }\n        }\n        /**\n         * Start fluent incrementing or decrementing value.\n         * @public\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        startCounting(k) {\n            this.__isStarted = true;\n            this.__delayTimer = setTimeout(() => {\n                this.__isCounting = true;\n                this.__oldValue = this.__currentValue = this.getValue();\n                this.__currentGrad = this.opt.gradientDefault;\n\n                this.__incTimer = setInterval(() => {\n                    this.__iterateCounting(k);\n                }, this.opt.interval);\n            }, this.opt.delay);\n        }\n        /**\n         * Stop fluent incrementing or decrementing value.\n         * @public\n         */\n        stopCounting() {\n            this.__clearCounting();\n\n            if (this.__isCounting) {\n                this.__isCounting = false;\n                clearInterval(this.__incTimer);\n\n                let value = this.getValue();\n\n                if (value !== this.__oldValue) {\n                    this.$input.trigger('change');\n                    if (this.opt.onChange) {\n                        this.opt.onChange.call(this, value, this.__oldValue);\n                    }\n                }\n            }\n        }\n        /**\n         * Process incrementing or decrementing value for each iteration.\n         * @private\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        __iterateCounting(k) {\n            this.__currentValue += k * this.opt.step * this.__currentGrad;\n\n            let newValue = this.__round(this.__currentValue);\n\n            let stop = false;\n            if (newValue < this.opt.min) {\n                newValue = this.opt.min;\n                stop = true;\n            } else if (newValue > this.opt.max) {\n                newValue = this.opt.max;\n                stop = true;\n            }\n\n            let value = this.getValue();\n\n            if (newValue !== value) {\n                this.setValue(newValue);\n                this.check();\n                if (this.opt.onIterate) {\n                    this.opt.onIterate.call(this, newValue, value);\n                }\n            }\n\n            if (stop) {\n                this.stopCounting();\n            } else {\n                this.__incGrad();\n            }\n        }\n        /**\n         * Clear timer for delayed start.\n         * @private\n         */\n        __clearCounting() {\n            if (this.__isStarted) {\n                this.__isStarted = false;\n                clearTimeout(this.__delayTimer);\n            }\n        }\n        /**\n         * Set next coefficient for fluent incrementing or decrementing.\n         * @private\n         */\n        __incGrad() {\n            if (this.__currentGrad < this.opt.gradientMax) {\n                this.__currentGrad *= this.opt.gradientFactor;\n            }\n            if (this.__currentGrad > this.opt.gradientMax) {\n                this.__currentGrad = this.opt.gradientMax;\n            }\n        }\n        /**\n         * Get value from input.\n         * @public\n         * @return {number} The value.\n         */\n        getValue() {\n            let value = this.input.value;\n\n            if (this.opt.encodeValue) {\n                value = this.opt.encodeValue.call(this, value);\n            }\n\n            if (value === '') {\n                if (!this.opt.emptyOnMin) {\n                    throw new TypeError('Can\\'t convert empty string to value');\n                }\n                return this.opt.min;\n            } else {\n                return parseFloat(this.opt.comma ? value.toString().replace(/,/, '.') : value);\n            }\n        }\n        /**\n         * Set value for input.\n         * @public\n         * @param {number} value.\n         */\n        setValue(value) {\n            if (this.opt.decodeValue) {\n                value = this.opt.decodeValue.call(this, value);\n            }\n\n            if (value === this.opt.min && this.opt.emptyOnMin) {\n                this.input.value = '';\n            } else {\n                this.input.value = this.opt.comma ? value.toString().replace(/\\./, ',') : value;\n            }\n        }\n        /**\n         * Fit input value for current constraints (min, max).\n         * @public\n         */\n        fit() {\n            let value = this.getValue();\n            if (value < this.opt.min) {\n                value = this.opt.min;\n            }\n            if (value > this.opt.max) {\n                value = this.opt.max;\n            }\n            this.setValue(value);\n        }\n        /**\n         * Check arrows for availability using min and max options.\n         * @public\n         */\n        check() {\n            let value = this.getValue();\n\n            if (value <= this.opt.min) {\n                this.$prev.addClass(this.opt.disabledClassName);\n            } else {\n                this.$prev.removeClass(this.opt.disabledClassName);\n            }\n\n            if (value >= this.opt.max) {\n                this.$next.addClass(this.opt.disabledClassName);\n            } else {\n                this.$next.removeClass(this.opt.disabledClassName);\n            }\n        }\n        /**\n         * Round value using step option.\n         * @private\n         * @return {number} The rounded value.\n         */\n        __round(value) {\n            return Math.round(value / this.opt.step) * this.opt.step;\n        }\n        /**\n         * Destroy all created elements and unbind connected events.\n         * @public\n         */\n        destroy() {\n            this.$input.off('change', this.__checkChange);\n            this.$prev.remove();\n            this.$next.remove();\n        }\n    }\n\n    $.fn.extend({\n        inputarrow: function(arg, ...args) {\n            if (typeof arg === 'string') {\n                let value = [];\n\n                for (let i = 0; i < this.length; i ++) {\n                    let inputarrow = this.get(i)[prop];\n                    if (inputarrow) {\n                        if (typeof inputarrow[arg] !== 'undefined') {\n                            if (/^_/.test(arg)) {\n                                throw new Error(`Can't call ${arg}: it isn't public`);\n                            } else if (typeof inputarrow[arg] === 'function') {\n                                let res = inputarrow[arg].apply(inputarrow, args);\n                                value.push(res);\n\n                                if (arg === 'destroy') {\n                                    delete this.get(i)[prop];\n                                }\n                            } else {\n                                let res = inputarrow[arg];\n                                value.push(res);\n                            }\n                        } else {\n                            throw new Error(`Can't call ${arg}: no such method or property`);\n                        }\n                    } else {\n                        throw new Error(`Can't call ${arg}: InputArrow is not initialized`);\n                    }\n                }\n\n                if (this.length === 0) {\n                    return undefined;\n                } else if (this.length === 1) {\n                    return value[0];\n                } else {\n                    return value;\n                }\n            } else {\n                for (let i = 0; i < this.length; i ++) {\n                    let attrs = {},\n                        min = this.eq(i).attr('min'),\n                        max = this.eq(i).attr('max'),\n                        step = this.eq(i).attr('step');\n\n                    if (typeof min !== 'undefined' && min !== '') {\n                        attrs.min = parseFloat(min);\n                    }\n                    if (typeof max !== 'undefined' && max !== '') {\n                        attrs.max = parseFloat(max);\n                    }\n                    if (typeof step !== 'undefined' && step !== '' && step !== 'any') {\n                        attrs.step = parseFloat(step);\n                    }\n\n                    if (this.get(i)[prop]) {\n                        throw new Error('InputArrow is already initialized');\n                    }\n\n                    this.get(i)[prop] = new InputArrow(this.get(i), $.extend({}, attrs, arg));\n                }\n\n                return this;\n            }\n        }\n    });\n})(jQuery);\n"]}