{"version":3,"sources":["../../../../../../node_modules/browser-pack/_prelude.js","src/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","defaults","min","max","Infinity","step","emptyOnMin","renderPrev","input","document","createElement","addClass","html","insertBefore","renderNext","insertAfter","encodeValue","decodeValue","onChange","onIterate","disabledClassName","comma","gradientFactor","gradientDefault","gradientMax","delay","interval","prop","undefined","window","Symbol","InputArrow","options","_this","this","_classCallCheck","opt","extend","$input","$prev","$next","on","startCounting","__isStarted","__isCounting","stopCounting","__clearCounting","count","__checkChange","check","__currentGrad","fit","_createClass","key","value","k","getValue","newValue","__round","setValue","trigger","_this2","__delayTimer","setTimeout","__oldValue","__currentValue","__incTimer","setInterval","__iterateCounting","clearInterval","stop","__incGrad","clearTimeout","TypeError","parseFloat","toString","replace","removeClass","Math","round","off","remove","fn","inputarrow","arg","_len","arguments","args","Array","_key","get","test","res","apply","push","_res","_i","attrs","eq","attr","jQuery"],"mappings":"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","file":"../jquery.inputarrow.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n/* global jQuery */\n\n(function($) {\n    let defaults = {\n        min: 0,\n        max: Infinity,\n        step: 1,\n        emptyOnMin: false,\n        renderPrev(input) {\n            return $(document.createElement('span')).addClass('inputarrow-prev').html('<').insertBefore(input);\n        },\n        renderNext(input) {\n            return $(document.createElement('span')).addClass('inputarrow-next').html('>').insertAfter(input);\n        },\n        encodeValue: null,\n        decodeValue: null,\n        onChange: null,\n        onIterate: null,\n        disabledClassName: 'inputarrow-disabled',\n        comma: false,\n        gradientFactor: 1.1,\n        gradientDefault: 1,\n        gradientMax: 20,\n        delay: 300,\n        interval: 120\n    };\n\n    let prop = (window.Symbol !== undefined) ? window.Symbol('inputarrow') : '__inputarrow';\n\n\n    /** Class representing an inputarrow handler. */\n    class InputArrow {\n        /**\n         * Create an instance, setup plugin.\n         * @param {HTMLInputElement} input - html element.\n         * @param {object} options - settings.\n         */\n        constructor(input, options) {\n            this.input = input;\n            this.opt = $.extend({}, defaults, options);\n\n            this.$input = $(this.input);\n            this.$prev = this.opt.renderPrev.call(this, this.input);\n            this.$next = this.opt.renderNext.call(this, this.input);\n\n            this.$prev.on('mousedown touchstart', () => {\n                this.startCounting(-1);\n            }).on('mouseup mouseout touchend', () => {\n                if (this.__isStarted) {\n                    if (this.__isCounting) {\n                        this.stopCounting();\n                    } else {\n                        this.__clearCounting();\n                        this.count(-1);\n                    }\n                }\n            });\n\n            this.$next.on('mousedown touchstart', () => {\n                this.startCounting(1);\n            }).on('mouseup mouseout touchend', () => {\n                if (this.__isStarted) {\n                    if (this.__isCounting) {\n                        this.stopCounting();\n                    } else {\n                        this.__clearCounting();\n                        this.count(1);\n                    }\n                }\n            });\n\n            this.__checkChange = () => {\n                this.check();\n            };\n            this.$input.on('change', this.__checkChange);\n\n            this.__currentGrad = this.opt.gradientDefault;\n\n            this.fit();\n            this.check();\n        }\n        /**\n         * Single increment or decrement value.\n         * @public\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        count(k) {\n            console.log('count', k);\n\n            let value = this.getValue();\n            let newValue = this.__round(value + k * this.opt.step);\n\n            if (newValue < this.opt.min) {\n                newValue = this.opt.min;\n            } else if (newValue > this.opt.max) {\n                newValue = this.opt.max;\n            }\n\n            console.log('old value:', value, 'new value:', newValue);\n\n            if (newValue !== value) {\n                this.setValue(newValue);\n                this.$input.trigger('change');\n                if (this.opt.onChange) {\n                    this.opt.onChange.call(this, newValue, value);\n                }\n            }\n        }\n        /**\n         * Start fluent incrementing or decrementing value.\n         * @public\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        startCounting(k) {\n            this.__isStarted = true;\n            this.__delayTimer = setTimeout(() => {\n                console.log('startCounting', k);\n\n                this.__isCounting = true;\n                this.__oldValue = this.__currentValue = this.getValue();\n                this.__currentGrad = this.opt.gradientDefault;\n\n                this.__incTimer = setInterval(() => {\n                    this.__iterateCounting(k);\n                }, this.opt.interval);\n            }, this.opt.delay);\n        }\n        /**\n         * Stop fluent incrementing or decrementing value.\n         * @public\n         */\n        stopCounting() {\n            this.__clearCounting();\n\n            if (this.__isCounting) {\n                console.log('stopCounting');\n\n                this.__isCounting = false;\n                clearInterval(this.__incTimer);\n\n                let value = this.getValue();\n\n                if (value !== this.__oldValue) {\n                    this.$input.trigger('change');\n                    if (this.opt.onChange) {\n                        this.opt.onChange.call(this, value, this.__oldValue);\n                    }\n                }\n            }\n        }\n        /**\n         * Process incrementing or decrementing value for each iteration.\n         * @private\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        __iterateCounting(k) {\n            this.__currentValue += k * this.opt.step * this.__currentGrad;\n\n            let newValue = this.__round(this.__currentValue);\n\n            let stop = false;\n            if (newValue < this.opt.min) {\n                newValue = this.opt.min;\n                stop = true;\n            } else if (newValue > this.opt.max) {\n                newValue = this.opt.max;\n                stop = true;\n            }\n\n            let value = this.getValue();\n\n            console.log('old value:', value, 'new value', newValue);\n\n            if (newValue !== value) {\n                this.setValue(newValue);\n                this.check();\n                if (this.opt.onIterate) {\n                    this.opt.onIterate.call(this, newValue, value);\n                }\n            }\n\n            if (stop) {\n                this.stopCounting();\n            } else {\n                this.__incGrad();\n            }\n        }\n        /**\n         * Clear timer for delayed start.\n         * @private\n         */\n        __clearCounting() {\n            if (this.__isStarted) {\n                this.__isStarted = false;\n                clearTimeout(this.__delayTimer);\n            }\n        }\n        /**\n         * Set next coefficient for fluent incrementing or decrementing.\n         * @private\n         */\n        __incGrad() {\n            if (this.__currentGrad < this.opt.gradientMax) {\n                this.__currentGrad *= this.opt.gradientFactor;\n            }\n            if (this.__currentGrad > this.opt.gradientMax) {\n                this.__currentGrad = this.opt.gradientMax;\n            }\n        }\n        /**\n         * Get value from input.\n         * @public\n         * @return {number} The value.\n         */\n        getValue() {\n            let value = this.input.value;\n\n            if (this.opt.encodeValue) {\n                value = this.opt.encodeValue.call(this, value);\n            }\n\n            if (value === '') {\n                if (!this.opt.emptyOnMin) {\n                    throw new TypeError('Can\\'t convert empty string to value');\n                }\n                return this.opt.min;\n            } else {\n                return parseFloat(this.opt.comma ? value.toString().replace(/,/, '.') : value);\n            }\n        }\n        /**\n         * Set value for input.\n         * @public\n         * @param {number} value.\n         */\n        setValue(value) {\n            if (this.opt.decodeValue) {\n                value = this.opt.decodeValue.call(this, value);\n            }\n\n            if (value === this.opt.min && this.opt.emptyOnMin) {\n                this.input.value = '';\n            } else {\n                this.input.value = this.opt.comma ? value.toString().replace(/\\./, ',') : value;\n            }\n        }\n        /**\n         * Fit input value for current constraints (min, max).\n         * @public\n         */\n        fit() {\n            let value = this.getValue();\n            if (value < this.opt.min) {\n                value = this.opt.min;\n            }\n            if (value > this.opt.max) {\n                value = this.opt.max;\n            }\n            this.setValue(value);\n        }\n        /**\n         * Check arrows for availability using min and max options.\n         * @public\n         */\n        check() {\n            let value = this.getValue();\n\n            console.log('check:', value);\n\n            if (value <= this.opt.min) {\n                this.$prev.addClass(this.opt.disabledClassName);\n            } else {\n                this.$prev.removeClass(this.opt.disabledClassName);\n            }\n\n            if (value >= this.opt.max) {\n                this.$next.addClass(this.opt.disabledClassName);\n            } else {\n                this.$next.removeClass(this.opt.disabledClassName);\n            }\n        }\n        /**\n         * Round value using step option.\n         * @private\n         * @return {number} The rounded value.\n         */\n        __round(value) {\n            return Math.round(value / this.opt.step) * this.opt.step;\n        }\n        /**\n         * Destroy all created elements and unbind connected events.\n         * @public\n         */\n        destroy() {\n            console.log('destroy');\n\n            this.$input.off('change', this.__checkChange);\n            this.$prev.remove();\n            this.$next.remove();\n        }\n    }\n\n    $.fn.extend({\n        inputarrow: function(arg, ...args) {\n            if (typeof arg === 'string') {\n                let value = [];\n\n                for (let i = 0; i < this.length; i ++) {\n                    let inputarrow = this.get(i)[prop];\n                    if (inputarrow) {\n                        if (typeof inputarrow[arg] !== 'undefined') {\n                            if (/^_/.test(arg)) {\n                                throw new Error(`Can't call ${arg}: it isn't public`);\n                            } else if (typeof inputarrow[arg] === 'function') {\n                                let res = inputarrow[arg].apply(inputarrow, args);\n                                value.push(res);\n\n                                if (arg === 'destroy') {\n                                    delete this.get(i)[prop];\n                                }\n                            } else {\n                                let res = inputarrow[arg];\n                                value.push(res);\n                            }\n                        } else {\n                            throw new Error(`Can't call ${arg}: no such method or property`);\n                        }\n                    } else {\n                        throw new Error(`Can't call ${arg}: InputArrow is not initialized`);\n                    }\n                }\n\n                if (value.length === 1) {\n                    return value[0];\n                } else {\n                    return value;\n                }\n            } else {\n                for (let i = 0; i < this.length; i ++) {\n                    let attrs = {},\n                        min = this.eq(i).attr('min'),\n                        max = this.eq(i).attr('max'),\n                        step = this.eq(i).attr('step');\n\n                    if (typeof min !== 'undefined' && min !== '') {\n                        attrs.min = parseFloat(min);\n                    }\n                    if (typeof max !== 'undefined' && max !== '') {\n                        attrs.max = parseFloat(max);\n                    }\n                    if (typeof step !== 'undefined' && step !== '' && step !== 'any') {\n                        attrs.step = parseFloat(step);\n                    }\n\n                    if (this.get(i)[prop]) {\n                        throw new Error('InputArrow is already initialized');\n                    }\n\n                    this.get(i)[prop] = new InputArrow(this.get(i), $.extend({}, attrs, arg));\n                }\n\n                return this;\n            }\n        }\n    });\n})(jQuery);\n"]}