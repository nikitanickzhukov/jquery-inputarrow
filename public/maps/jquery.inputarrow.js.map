{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","defaults","min","max","Infinity","step","emptyOnMin","renderPrev","input","document","createElement","addClass","html","insertBefore","renderNext","insertAfter","encodeValue","decodeValue","onChange","onIterate","disabledClassName","comma","gradientFactor","gradientDefault","gradientMax","delay","interval","prop","window","Symbol","InputArrow","options","_this","this","_classCallCheck","opt","extend","$input","$prev","$next","on","startCounting","__isStarted","__isCounting","stopCounting","__clearCounting","count","__checkChange","check","__currentGrad","fit","_createClass","key","value","k","getValue","newValue","__round","setValue","trigger","_this2","__delayTimer","setTimeout","__oldValue","__currentValue","__incTimer","setInterval","__iterateCounting","clearInterval","stop","__incGrad","clearTimeout","TypeError","parseFloat","toString","replace","removeClass","Math","round","destroy","off","remove","fn","inputarrow","arg","_len","arguments","args","Array","_key","get","test","res","apply","push","_res","undefined","_i","attrs","eq","attr","jQuery"],"mappings":"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","file":"../jquery.inputarrow.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n/* global jQuery */\n\n(function($) {\n    let defaults = {\n        min: 0,\n        max: Infinity,\n        step: 1,\n        emptyOnMin: false,\n        renderPrev(input) {\n            return $(document.createElement('span')).addClass('inputarrow-prev').html('<').insertBefore(input);\n        },\n        renderNext(input) {\n            return $(document.createElement('span')).addClass('inputarrow-next').html('>').insertAfter(input);\n        },\n        encodeValue: null,\n        decodeValue: null,\n        onChange: null,\n        onIterate: null,\n        disabledClassName: 'inputarrow-disabled',\n        comma: false,\n        gradientFactor: 1.1,\n        gradientDefault: 1,\n        gradientMax: 20,\n        delay: 300,\n        interval: 120\n    };\n\n    let prop = window.Symbol ? window.Symbol('inputarrow') : '__inputarrow';\n\n\n    /** Class representing an inputarrow handler. */\n    class InputArrow {\n        /**\n         * Create an instance, setup plugin.\n         * @param {HTMLInputElement} input - html element.\n         * @param {object} options - settings.\n         */\n        constructor(input, options) {\n            this.input = input;\n            this.opt = $.extend({}, defaults, options);\n\n            this.$input = $(this.input);\n            this.$prev = this.opt.renderPrev.call(this, this.input);\n            this.$next = this.opt.renderNext.call(this, this.input);\n\n            this.$prev.on('mousedown touchstart', () => {\n                this.startCounting(-1);\n            }).on('mouseup mouseout touchend', () => {\n                if (this.__isStarted) {\n                    if (this.__isCounting) {\n                        this.stopCounting();\n                    } else {\n                        this.__clearCounting();\n                        this.count(-1);\n                    }\n                }\n            });\n\n            this.$next.on('mousedown touchstart', () => {\n                this.startCounting(1);\n            }).on('mouseup mouseout touchend', () => {\n                if (this.__isStarted) {\n                    if (this.__isCounting) {\n                        this.stopCounting();\n                    } else {\n                        this.__clearCounting();\n                        this.count(1);\n                    }\n                }\n            });\n\n            this.__checkChange = () => {\n                this.check();\n            };\n            this.$input.on('change', this.__checkChange);\n\n            this.__currentGrad = this.opt.gradientDefault;\n\n            this.fit();\n            this.check();\n        }\n        /**\n         * Single increment or decrement value.\n         * @public\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        count(k) {\n            let value = this.getValue();\n            let newValue = this.__round(value + k * this.opt.step);\n\n            if (newValue < this.opt.min) {\n                newValue = this.opt.min;\n            } else if (newValue > this.opt.max) {\n                newValue = this.opt.max;\n            }\n\n            if (newValue !== value) {\n                this.setValue(newValue);\n                this.$input.trigger('change');\n                if (this.opt.onChange) {\n                    this.opt.onChange.call(this, newValue, value);\n                }\n            }\n        }\n        /**\n         * Start fluent incrementing or decrementing value.\n         * @public\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        startCounting(k) {\n            this.__isStarted = true;\n            this.__delayTimer = setTimeout(() => {\n                this.__isCounting = true;\n                this.__oldValue = this.__currentValue = this.getValue();\n                this.__currentGrad = this.opt.gradientDefault;\n\n                this.__incTimer = setInterval(() => {\n                    this.__iterateCounting(k);\n                }, this.opt.interval);\n            }, this.opt.delay);\n        }\n        /**\n         * Stop fluent incrementing or decrementing value.\n         * @public\n         */\n        stopCounting() {\n            this.__clearCounting();\n\n            if (this.__isCounting) {\n                this.__isCounting = false;\n                clearInterval(this.__incTimer);\n\n                let value = this.getValue();\n\n                if (value !== this.__oldValue) {\n                    this.$input.trigger('change');\n                    if (this.opt.onChange) {\n                        this.opt.onChange.call(this, value, this.__oldValue);\n                    }\n                }\n            }\n        }\n        /**\n         * Process incrementing or decrementing value for each iteration.\n         * @private\n         * @param {number} k - coefficient (-1 for decrementing, +1 for incrementing).\n         */\n        __iterateCounting(k) {\n            this.__currentValue += k * this.opt.step * this.__currentGrad;\n\n            let newValue = this.__round(this.__currentValue);\n\n            let stop = false;\n            if (newValue < this.opt.min) {\n                newValue = this.opt.min;\n                stop = true;\n            } else if (newValue > this.opt.max) {\n                newValue = this.opt.max;\n                stop = true;\n            }\n\n            let value = this.getValue();\n\n            if (newValue !== value) {\n                this.setValue(newValue);\n                this.check();\n                if (this.opt.onIterate) {\n                    this.opt.onIterate.call(this, newValue, value);\n                }\n            }\n\n            if (stop) {\n                this.stopCounting();\n            } else {\n                this.__incGrad();\n            }\n        }\n        /**\n         * Clear timer for delayed start.\n         * @private\n         */\n        __clearCounting() {\n            if (this.__isStarted) {\n                this.__isStarted = false;\n                clearTimeout(this.__delayTimer);\n            }\n        }\n        /**\n         * Set next coefficient for fluent incrementing or decrementing.\n         * @private\n         */\n        __incGrad() {\n            if (this.__currentGrad < this.opt.gradientMax) {\n                this.__currentGrad *= this.opt.gradientFactor;\n            }\n            if (this.__currentGrad > this.opt.gradientMax) {\n                this.__currentGrad = this.opt.gradientMax;\n            }\n        }\n        /**\n         * Get value from input.\n         * @public\n         * @return {number} The value.\n         */\n        getValue() {\n            let value = this.input.value;\n\n            if (this.opt.encodeValue) {\n                value = this.opt.encodeValue.call(this, value);\n            }\n\n            if (value === '') {\n                if (!this.opt.emptyOnMin) {\n                    throw new TypeError('Can\\'t convert empty string to value');\n                }\n                return this.opt.min;\n            } else {\n                return parseFloat(this.opt.comma ? value.toString().replace(/,/, '.') : value);\n            }\n        }\n        /**\n         * Set value for input.\n         * @public\n         * @param {number} value.\n         */\n        setValue(value) {\n            if (this.opt.decodeValue) {\n                value = this.opt.decodeValue.call(this, value);\n            }\n\n            if (value === this.opt.min && this.opt.emptyOnMin) {\n                this.input.value = '';\n            } else {\n                this.input.value = this.opt.comma ? value.toString().replace(/\\./, ',') : value;\n            }\n        }\n        /**\n         * Fit input value for current constraints (min, max).\n         * @public\n         */\n        fit() {\n            let value = this.getValue();\n            if (value < this.opt.min) {\n                value = this.opt.min;\n            }\n            if (value > this.opt.max) {\n                value = this.opt.max;\n            }\n            this.setValue(value);\n        }\n        /**\n         * Check arrows for availability using min and max options.\n         * @public\n         */\n        check() {\n            let value = this.getValue();\n\n            if (value <= this.opt.min) {\n                this.$prev.addClass(this.opt.disabledClassName);\n            } else {\n                this.$prev.removeClass(this.opt.disabledClassName);\n            }\n\n            if (value >= this.opt.max) {\n                this.$next.addClass(this.opt.disabledClassName);\n            } else {\n                this.$next.removeClass(this.opt.disabledClassName);\n            }\n        }\n        /**\n         * Round value using step option.\n         * @private\n         * @return {number} The rounded value.\n         */\n        __round(value) {\n            return Math.round(value / this.opt.step) * this.opt.step;\n        }\n        /**\n         * Destroy all created elements and unbind connected events.\n         * @public\n         */\n        destroy() {\n            this.$input.off('change', this.__checkChange);\n            this.$prev.remove();\n            this.$next.remove();\n        }\n    }\n\n    $.fn.extend({\n        inputarrow: function(arg, ...args) {\n            if (typeof arg === 'string') {\n                let value = [];\n\n                for (let i = 0; i < this.length; i ++) {\n                    let inputarrow = this.get(i)[prop];\n                    if (inputarrow) {\n                        if (typeof inputarrow[arg] !== 'undefined') {\n                            if (/^_/.test(arg)) {\n                                throw new Error(`Can't call ${arg}: it isn't public`);\n                            } else if (typeof inputarrow[arg] === 'function') {\n                                let res = inputarrow[arg].apply(inputarrow, args);\n                                value.push(res);\n\n                                if (arg === 'destroy') {\n                                    delete this.get(i)[prop];\n                                }\n                            } else {\n                                let res = inputarrow[arg];\n                                value.push(res);\n                            }\n                        } else {\n                            throw new Error(`Can't call ${arg}: no such method or property`);\n                        }\n                    } else {\n                        throw new Error(`Can't call ${arg}: InputArrow is not initialized`);\n                    }\n                }\n\n                if (this.length === 0) {\n                    return undefined;\n                } else if (this.length === 1) {\n                    return value[0];\n                } else {\n                    return value;\n                }\n            } else {\n                for (let i = 0; i < this.length; i ++) {\n                    let attrs = {},\n                        min = this.eq(i).attr('min'),\n                        max = this.eq(i).attr('max'),\n                        step = this.eq(i).attr('step');\n\n                    if (typeof min !== 'undefined' && min !== '') {\n                        attrs.min = parseFloat(min);\n                    }\n                    if (typeof max !== 'undefined' && max !== '') {\n                        attrs.max = parseFloat(max);\n                    }\n                    if (typeof step !== 'undefined' && step !== '' && step !== 'any') {\n                        attrs.step = parseFloat(step);\n                    }\n\n                    if (this.get(i)[prop]) {\n                        throw new Error('InputArrow is already initialized');\n                    }\n\n                    this.get(i)[prop] = new InputArrow(this.get(i), $.extend({}, attrs, arg));\n                }\n\n                return this;\n            }\n        }\n    });\n})(jQuery);\n"]}